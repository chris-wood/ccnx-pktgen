{"name":"ccnx-pktgen","tagline":"","body":"# Overview\r\n\r\nccnx-pktgen is a CCNx packet grammar parser and generator that converts \r\ngrammar specifications to raw bytes. It can also be used to quickly create\r\npackets represented in S-expression form. The tool is meant to be a general\r\npurpose packet generator for tests and experiments. It is also intended to \r\nguide packet format experimentation. \r\n\r\n# Grammar Specification Notes\r\n\r\nThe current CCNx packet grammar is specified online at:\r\n\r\nhttps://tools.ietf.org/html/draft-irtf-icnrg-ccnxmessages-00#section-3.6.1\r\n\r\nThe grammar has been extracted and translated to its ABNF representation\r\nhere. The following grammar is used internally within ccnx-pktgen to \r\ndetermine how packets are to be constructed. Terminal values in the grammar\r\nare mapped to data sources from which values can be randomly generated. \r\nFor example, consider the following grammar:\r\n\r\n~~~\r\nT_NAME := G_NAME | T_NAME_SEGMENT+\r\nT_NAME_SEGMENT := G_NAME_SEGMENT | STRING\r\n~~~\r\n\r\nThis says that a TLV of type T_NAME can be either a G_NAME or\r\na list of one or more T_NAME_SEGMENTS. The TLV T_NAME_SEGMENT\r\nis a terminal value. Both G_NAME and G_NAME_SEGMENT are generators\r\nfrom which actual values can be sampled. By convention, the grammar\r\nwill be written such that all TLV types are prefixed with \"T_\"\r\nand all terminal generators are prefixed with \"G_\".\r\n\r\n# CCNx Packet in ABNF\r\n\r\nT_NAME := G_NAME | T_NAME_SEGMENT+\r\nT_NAME_SEGMENT := G_NAME_SEGMENT | STRING\r\n\r\n# CCNx Packet in S-Expression Form\r\n\r\nNameSegment := \"NameSegment\" String\r\nName := (\"Name\" NameSegment-1 NameSegment-2 ...)\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}